{"version":3,"sources":["Alerts.tsx","App.js","index.js"],"names":["AlertType","theme","createMuiTheme","palette","type","returnResponse","rootID","AlertRoot","props","message","title","root","useRef","Close","current","remove","Cancel","CONFIRM","useEffect","div","document","getElementById","ThemeProvider","Dialog","onClose","open","disablePortal","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","onClick","Create","ALERT","createElement","id","body","appendChild","ReactDOM","render","Confirm","Promise","resolve","Alert","compress","Compress","mapURL","test","navigator","platform","srng","window","Math","seedrandom","COLORS","Main","useState","data","setData","updateScrollHeaders","event","headers","Array","from","querySelectorAll","forEach","a","classList","i","length","getBoundingClientRect","y","add","offsetHeight","style","top","fetch","then","r","json","addEventListener","className","href","map","day","di","colorArr","listings","newColorIndex","console","log","push","name","listing","CalendarEvent","colorIndex","JSON","stringify","flexWrap","borderLeft","backgroundColor","image","src","alt","marginRight","paddingRight","timeString","description","target","address","AddEventForm","desc","setDesc","isLoading","setIsLoading","submitForm","useCallback","method","querySelector","value","startTime","endTime","phoneNumber","success","location","error","file","files","maxWidth","maxHeight","resize","prefix","htmlFor","placeholder","limit","onChange","e","disabled","LimitedTextarea","rows","cols","slice","content","setContent","setFormattedContent","text","App","pathname","includes","StrictMode"],"mappings":"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","file":"static/js/main.b3b1f4db.chunk.js","sourcesContent":["// completed code for Alert and Confirm\nimport {\n    Button,\n    createMuiTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    ThemeProvider\n} from \"@material-ui/core\";\nimport {useEffect, FC, useRef} from 'react';\nimport ReactDOM from \"react-dom\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\"\n    }\n});\n\n// type of alert to trigger\nenum AlertType {\n    ALERT,\n    CONFIRM\n}\n\n// extended with the type prop\nexport interface IAlertProps {\n    message: string;\n    title: string;\n    type: AlertType;\n}\n\nconst rootID = \"alert-dialog\";\n\n// our promise to be stored for resolve on input\nlet returnResponse: (value: boolean) => void;\n\nconst AlertRoot: FC<IAlertProps> = (props) => {\n    // include type\n    const {message, title, type} = props;\n    const root = useRef<HTMLDivElement | null>();\n\n    useEffect(() => {\n        let div = document.getElementById(rootID) as HTMLDivElement;\n        root.current = div;\n    }, [])\n\n    function Close() {\n        root.current?.remove();\n    }\n\n    // called on OK\n    function Confirm() {\n        // only resolve if confirm type\n        if (type === AlertType.CONFIRM) {\n            // returns true\n            returnResponse(true);\n        }\n        Close();\n    }\n\n    // called on cancel/dismiss\n    function Cancel() {\n        // only resolve if confirm type\n        if (type === AlertType.CONFIRM) {\n            // returns false\n            returnResponse(false);\n        }\n        Close();\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Dialog\n                // Cancel on dismiss\n                onClose={() => Cancel()}\n                open={true}\n                disablePortal={true}\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{message}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        color={\"secondary\"}\n                        // confirm on ok\n                        onClick={() => Confirm()}\n                    >\n                        {\"OK\"}\n                    </Button>\n                    {/* only display cancel if confirm type */}\n                    {\n                        type === AlertType.CONFIRM &&\n                        <Button\n                            // cancel on cancel\n                            onClick={() => Cancel()}\n                        >\n                            {\"Cancel\"}\n                        </Button>\n                    }\n                </DialogActions>\n            </Dialog>\n        </ThemeProvider>\n    );\n}\n\n// pass in alert type\nfunction Create(message: string, title: string, type: AlertType = AlertType.ALERT) {\n    let div = document.getElementById(rootID);\n    if (!div) {\n        div = document.createElement(\"div\");\n        div.id = rootID;\n        document.body.appendChild(div);\n    }\n\n    ReactDOM.render(\n        <AlertRoot\n            message={message}\n            title={title}\n            type={type}\n        />, div\n    );\n}\n\n// new confirm method\nexport function Confirm(message: string, title: string = \"Confirm\") {\n    // pass in type\n    Create(message, title, AlertType.CONFIRM);\n    // set our promise for resolve on input\n    return new Promise<boolean>(resolve => {\n        returnResponse = resolve;\n    });\n}\n\nexport function Alert(message: string, title: string = \"Alert\") {\n    // pass in type\n    Create(message, title, AlertType.ALERT);\n}","import './App.sass';\nimport {useCallback, useEffect, useState} from \"react\";\nimport * as Compress from 'compress.js';\nimport {Alert, Confirm} from \"./Alerts\";\nconst compress = new Compress();\n\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.platform) ||\n    (navigator.platform === 'MacIntel')\nconst mapURL = isIOS ? \"https://maps.apple.com/?q=\" : \"https://www.google.com/maps?q=\";\n\nconst srng = new window.Math.seedrandom('samyok');\n\nfunction App() {\n    return (\n        <>\n            {window.location.pathname.includes('add') ? <AddEventForm/> : <Main/>}\n            <div className=\"footer\">Created by Samyok Nepal | <a target=\"_blank\" href=\"https://github.com/samyok/gradparty\">Github</a></div>\n        </>\n    );\n}\n\nconst COLORS = [\n    [\"#a63238\", \"#ffc0c0\",],\n    [\"#d38773\", \"#ffd0a5\",],\n    [\"#76b488\", \"#bdffa7\",],\n    [\"#4e84d5\", \"#b3e7ff\",],\n    [\"#6b45a1\", \"#d2d6ff\",],\n];\n\nfunction Main() {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        fetch('/data')\n            .then(r => r.json())\n            .then(r => setData(r))\n\n        document.addEventListener('scroll', updateScrollHeaders);\n        document.addEventListener('resize', updateScrollHeaders);\n\n        function updateScrollHeaders(event) {\n            let headers = Array.from(document.querySelectorAll('.eventHeader'));\n            headers.forEach(a => a.classList.remove('sticky'));\n            // get last negative Y coordinate\n            let i = 0;\n            while (i < headers.length - 1) {\n                if (headers[i + 1].getBoundingClientRect().y > 0) {\n                    break;\n                }\n                i++;\n                // if the next one is positive (shows up on screen), than this is hte one we're lookign for\n\n            }\n\n            headers[i].classList.add('sticky');\n            if (headers[i + 1] && headers[i + 1].getBoundingClientRect().y < headers[i + 1].offsetHeight) {\n                headers[i].style.top = (headers[i + 1].getBoundingClientRect().y - headers[i + 1].offsetHeight) + \"px\";\n            } else {\n                headers[i].style.top = \"0px\";\n            }\n            // console.log(headers.map(a => ({header: a, height: a.offsetHeight, coords: a.getBoundingClientRect()})))\n        }\n    }, [])\n    return (\n        <div className=\"container\">\n            <h1>'21 Grad Parties</h1>\n            <p>Add your graduation party to this list by clicking <a href=\"/add\">here</a>! 🎓🎉</p>\n            <p>Everyone's invited to the following open houses! Text me (605-592-6144) if anything needs changing.</p>\n            <br/>\n            <br/>\n            {data.map((day, di) => {\n                let colorArr = []\n                while (colorArr.length < day.listings.length) {\n                    let newColorIndex = COLORS.length * srng() >> 0;\n                    if (colorArr.length > 0 && colorArr[colorArr.length - 1] === newColorIndex) {\n                        continue;\n                    }\n                    console.log(colorArr);\n                    colorArr.push(newColorIndex)\n                }\n                return <div key={di + JSON.stringify(day)}>\n                    <h2 className=\"eventHeader\">🎊 {day.name}</h2>\n                    <br/>\n                    {day.listings.map((listing, i) => <CalendarEvent listing={listing}\n                                                                     colorIndex={colorArr[i]}\n                                                                     key={i + JSON.stringify(listing)}/>)}\n                    <br/>\n                    <br/>\n                </div>\n            })}\n\n        </div>\n    )\n}\n\nfunction CalendarEvent({listing, colorIndex}) {\n    let color = COLORS[colorIndex];\n    return (\n        <div className=\"event row\"\n             style={{\n                 flexWrap: \"nowrap\",\n                 borderLeft: `3px solid ${color[0]}`,\n                 backgroundColor: color[1]\n             }}>\n            {!!listing.image && <img src={listing.image} alt=\"event avatar\" style={{marginRight: 10}}/>}\n            <div>\n                <h3>{listing.name}</h3>\n                <div className=\"row\">\n                    <pre style={{paddingRight: 20}}>{listing.timeString}</pre>\n                    <p>{listing.description}</p>\n                </div>\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <a target=\"_blank\"\n                   href={mapURL + listing.address}>📍 {listing.address}</a>\n            </div>\n        </div>\n    )\n}\n\nfunction AddEventForm() {\n    const [desc, setDesc] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const submitForm = useCallback(async () => {\n        setIsLoading(true);\n        let file = document.querySelector(\"#upload\")?.files[0];\n        if (!file) {\n            if (await Confirm(\"Are you sure you don't want to submit an image?\"))\n                return submitForm(null);\n            else {\n                setIsLoading(false);\n                return;\n            };\n        }\n\n        compress.compress([file], {\n            maxWidth: 300,\n            maxHeight: 300,\n            resize: true,\n        }).then((data) => {\n            console.log(data);\n            submitForm(data[0].prefix + data[0].data)\n        })\n\n        // let reader = new FileReader();\n        // reader.onload = e => {\n        //     let image = e.target.result;\n        //     submitForm(image)\n        // }\n        // reader.readAsDataURL(file);\n\n        function submitForm(image) {\n            fetch(\"/submit\", {\n                method: \"POST\", headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: desc,\n                    name: document.querySelector(\"#eventName\").value,\n                    day: document.querySelector(\"#day\").value,\n                    startTime: document.querySelector(\"#startTime\").value,\n                    endTime: document.querySelector(\"#endTime\").value,\n                    address: document.querySelector(\"#address\").value,\n                    phoneNumber: document.querySelector(\"#phonenumber\").value,\n                    image,\n                })\n            })\n                .then(r => r.json())\n                .then(async r => {\n                    setIsLoading(false);\n                    if (r.success) {\n                        await Alert(\"Added event successfully!\");\n                        window.location.href = \"/\"\n                    } else {\n                        await Alert(r.error);\n                    }\n                })\n\n        }\n\n    }, [desc])\n    return <div className=\"container\">\n        <h1>'21 Grad Parties</h1>\n        <p>Add your graduation party to this list by filling out the form below! 🎓🎉</p>\n\n        <label htmlFor=\"eventName\">\n            Event Name *<input type=\"text\" placeholder=\"Name of event\" id=\"eventName\"/>\n        </label>\n\n        <label htmlFor=\"day\">\n            Date *\n            <input type=\"date\" id=\"day\"/>\n        </label>\n\n        <label htmlFor=\"startTime\">\n            Start Time *\n            <input type=\"time\" id=\"startTime\"/>\n        </label>\n\n        <label htmlFor=\"endTime\">\n            End Time *\n            <input type=\"time\" id=\"endTime\"/>\n        </label>\n\n        <label htmlFor=\"description\">\n            Description\n            <LimitedTextarea limit={250} onChange={e => setDesc(e)}/>\n        </label>\n\n        <label htmlFor=\"address\">\n            Address (street AND city!) *\n            <input type=\"text\" id=\"address\" placeholder=\"1600 Pennsylvania Avenue, Washington, D.C.\"/>\n        </label>\n\n        <label htmlFor=\"upload\">\n            Upload Image\n            <input type=\"file\" id=\"upload\"/>\n        </label>\n        <label htmlFor=\"phonenumber\">\n            Submitter's Contact Phone Number *\n            <input type=\"tel\" id=\"phonenumber\"/>\n        </label>\n\n\n\n        <button onClick={submitForm} disabled={isLoading}>{isLoading ? \"Loading...\" : 'Post'}</button>\n    </div>\n}\n\nconst LimitedTextarea = ({\n                             rows, cols, value = \"\", limit, onChange = () => {\n    }\n                         }) => {\n    const [content, setContent] = useState(value.slice(0, limit));\n\n    const setFormattedContent = useCallback(\n        text => {\n            setContent(text.slice(0, limit));\n            onChange(text.slice(0, limit))\n        },\n        [limit, onChange]\n    );\n\n    return (\n        <>\n      <textarea\n          rows={rows}\n          cols={cols}\n          onChange={event => setFormattedContent(event.target.value)}\n          value={content}\n          placeholder={`up to ${limit} characters`}\n      />\n            <span>\n                {content.length}/{limit}\n            </span>\n        </>\n    );\n};\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}