{"version":3,"sources":["App.js","index.js"],"names":["mapURL","test","navigator","platform","srng","window","Math","seedrandom","COLORS","Main","useState","data","setData","useEffect","updateScrollHeaders","event","headers","Array","from","document","querySelectorAll","forEach","a","classList","remove","i","length","getBoundingClientRect","y","add","offsetHeight","style","top","fetch","then","r","json","addEventListener","className","href","map","day","di","colorArr","listings","newColorIndex","console","log","push","name","listing","CalendarEvent","colorIndex","JSON","stringify","color","flexWrap","borderLeft","backgroundColor","image","src","alt","marginRight","paddingRight","timeString","description","target","address","AddEventForm","desc","setDesc","submitForm","useCallback","file","querySelector","files","confirm","reader","FileReader","method","body","value","startTime","endTime","phoneNumber","success","alert","location","error","onload","e","result","readAsDataURL","htmlFor","type","placeholder","id","limit","onChange","onClick","LimitedTextarea","rows","cols","slice","content","setContent","setFormattedContent","text","App","pathname","includes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9d600d0.chunk.js","sourcesContent":["import './App.sass';\nimport {useCallback, useEffect, useState} from \"react\";\n\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.platform) ||\n    (navigator.platform === 'MacIntel')\nconst mapURL = isIOS ? \"https://maps.apple.com/?q=\" : \"https://www.google.com/maps?q=\";\n\nconst srng = new window.Math.seedrandom('samyok');\n\nfunction App() {\n    return (\n        <>\n            {window.location.pathname.includes('add') ? <AddEventForm/> : <Main/>}\n            <div className=\"footer\">Created by Samyok Nepal | <a target=\"_blank\" href=\"https://github.com/samyok/gradparty\">Github</a></div>\n        </>\n    );\n}\n\nconst COLORS = [\n    [\"#a63238\", \"#ffc0c0\",],\n    [\"#d38773\", \"#ffd0a5\",],\n    [\"#76b488\", \"#bdffa7\",],\n    [\"#4e84d5\", \"#b3e7ff\",],\n    [\"#6b45a1\", \"#d2d6ff\",],\n];\n\nfunction Main() {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        fetch('/data')\n            .then(r => r.json())\n            .then(r => setData(r))\n\n        document.addEventListener('scroll', updateScrollHeaders);\n        document.addEventListener('resize', updateScrollHeaders);\n\n        function updateScrollHeaders(event) {\n            let headers = Array.from(document.querySelectorAll('.eventHeader'));\n            headers.forEach(a => a.classList.remove('sticky'));\n            // get last negative Y coordinate\n            let i = 0;\n            while (i < headers.length - 1) {\n                if (headers[i + 1].getBoundingClientRect().y > 0) {\n                    break;\n                }\n                i++;\n                // if the next one is positive (shows up on screen), than this is hte one we're lookign for\n\n            }\n\n            headers[i].classList.add('sticky');\n            if (headers[i + 1] && headers[i + 1].getBoundingClientRect().y < headers[i + 1].offsetHeight) {\n                headers[i].style.top = (headers[i + 1].getBoundingClientRect().y - headers[i + 1].offsetHeight) + \"px\";\n            } else {\n                headers[i].style.top = \"0px\";\n            }\n            // console.log(headers.map(a => ({header: a, height: a.offsetHeight, coords: a.getBoundingClientRect()})))\n        }\n    }, [])\n    return (\n        <div className=\"container\">\n            <h1>'21 Grad Parties</h1>\n            <p>Add your graduation party to this list by clicking <a href=\"/add\">here</a>! üéìüéâ</p>\n            <p>Everyone's invited to the following open houses! Text me (605-592-6144) if anything needs changing.</p>\n            <br/>\n            <br/>\n            {data.map((day, di) => {\n                let colorArr = []\n                while (colorArr.length < day.listings.length) {\n                    let newColorIndex = COLORS.length * srng() >> 0;\n                    if (colorArr.length > 0 && colorArr[colorArr.length - 1] === newColorIndex) {\n                        continue;\n                    }\n                    console.log(colorArr);\n                    colorArr.push(newColorIndex)\n                }\n                return <div key={di + JSON.stringify(day)}>\n                    <h2 className=\"eventHeader\">üéä {day.name}</h2>\n                    <br/>\n                    {day.listings.map((listing, i) => <CalendarEvent listing={listing}\n                                                                     colorIndex={colorArr[i]}\n                                                                     key={i + JSON.stringify(listing)}/>)}\n                    <br/>\n                    <br/>\n                </div>\n            })}\n\n        </div>\n    )\n}\n\nfunction CalendarEvent({listing, colorIndex}) {\n    let color = COLORS[colorIndex];\n    return (\n        <div className=\"event row\"\n             style={{\n                 flexWrap: \"nowrap\",\n                 borderLeft: `3px solid ${color[0]}`,\n                 backgroundColor: color[1]\n             }}>\n            {!!listing.image && <img src={listing.image} alt=\"event avatar\" style={{marginRight: 10}}/>}\n            <div>\n                <h3>{listing.name}</h3>\n                <div className=\"row\">\n                    <pre style={{paddingRight: 20}}>{listing.timeString}</pre>\n                    <p>{listing.description}</p>\n                </div>\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <a target=\"_blank\"\n                   href={mapURL + listing.address}>üìç {listing.address}</a>\n            </div>\n        </div>\n    )\n}\n\nfunction AddEventForm() {\n    const [desc, setDesc] = useState(\"\");\n    const submitForm = useCallback(() => {\n        let file = document.querySelector(\"#upload\").files[0];\n        if (!file) {\n            if (window.confirm(\"Are you sure you don't want to submit an image?\"))\n                return submitForm(null);\n            else return;\n        }\n        let reader = new FileReader();\n        reader.onload = e => {\n            let image = e.target.result;\n            submitForm(image)\n        }\n        reader.readAsDataURL(file);\n\n        function submitForm(image) {\n            fetch(\"/submit\", {\n                method: \"POST\", headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    description: desc,\n                    name: document.querySelector(\"#eventName\").value,\n                    day: document.querySelector(\"#day\").value,\n                    startTime: document.querySelector(\"#startTime\").value,\n                    endTime: document.querySelector(\"#endTime\").value,\n                    address: document.querySelector(\"#address\").value,\n                    phoneNumber: document.querySelector(\"#phonenumber\").value,\n                    image,\n                })\n            })\n                .then(r => r.json())\n                .then(r => {\n                    if (r.success) {\n                        alert(\"Added event successfully!\");\n                        window.location.href = \"/\"\n                    } else {\n                        alert(r.error);\n                    }\n                })\n\n        }\n\n    }, [desc])\n    return <div className=\"container\">\n        <h1>'21 Grad Parties</h1>\n        <p>Add your graduation party to this list by filling out the form below! üéìüéâ</p>\n\n        <label htmlFor=\"eventName\">\n            Event Name *<input type=\"text\" placeholder=\"Name of event\" id=\"eventName\"/>\n        </label>\n\n        <label htmlFor=\"day\">\n            Date *\n            <input type=\"date\" id=\"day\"/>\n        </label>\n\n        <label htmlFor=\"startTime\">\n            Start Time *\n            <input type=\"time\" id=\"startTime\"/>\n        </label>\n\n        <label htmlFor=\"endTime\">\n            End Time *\n            <input type=\"time\" id=\"endTime\"/>\n        </label>\n\n        <label htmlFor=\"description\">\n            Description\n            <LimitedTextarea limit={250} onChange={e => setDesc(e)}/>\n        </label>\n\n        <label htmlFor=\"address\">\n            Address (street AND city!) *\n            <input type=\"text\" id=\"address\" placeholder=\"1600 Pennsylvania Avenue, Washington, D.C.\"/>\n        </label>\n\n        <label htmlFor=\"upload\">\n            Upload Image\n            <input type=\"file\" id=\"upload\"/>\n        </label>\n        <p>Note: Images will be warped to fit to a square if they are not already one!</p>\n        <label htmlFor=\"phonenumber\">\n            Submitter's Contact Phone Number *\n            <input type=\"tel\" id=\"phonenumber\"/>\n        </label>\n\n\n\n        <button onClick={submitForm}>Post</button>\n    </div>\n}\n\nconst LimitedTextarea = ({\n                             rows, cols, value = \"\", limit, onChange = () => {\n    }\n                         }) => {\n    const [content, setContent] = useState(value.slice(0, limit));\n\n    const setFormattedContent = useCallback(\n        text => {\n            setContent(text.slice(0, limit));\n            onChange(text.slice(0, limit))\n        },\n        [limit, onChange]\n    );\n\n    return (\n        <>\n      <textarea\n          rows={rows}\n          cols={cols}\n          onChange={event => setFormattedContent(event.target.value)}\n          value={content}\n          placeholder={`up to ${limit} characters`}\n      />\n            <span>\n                {content.length}/{limit}\n            </span>\n        </>\n    );\n};\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}